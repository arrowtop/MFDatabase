/*************************************************************************************************
* CS 562 Project
* Author: Yujie Du(10372723), Chuanhui Zhang(10387654)
*
* This class is generated by MFMainGenerator(), generated at 2014-05-10 03:01:42
* It will require the data from MFStruct class which is generated by MFStructGenerator class.
*
*************************************************************************************************/

package imagineDragon;

import java.sql.*;
import java.util.HashMap;
import java.util.Map.Entry;
import java.util.Iterator;
import java.util.Map;

public class MFMain {

	//Information needed to connect to database by using jdbc.
	private static final String DBDRIVER = "org.postgresql.Driver";
	private static final String DBURL = "jdbc:postgresql://localhost:5432/postgres";
	private static final String DBUSER = "postgres";
	private static final String DBPASSWORD = "12345678";
	static Connection conn;


	static public void main(String[] args) {

		Map<String, MFStruct> mapMFStruct = new HashMap<String, MFStruct>();
		try
		{
			Class.forName(DBDRIVER);
			conn = DriverManager.getConnection(DBURL, DBUSER, DBPASSWORD);
			String sql = "SELECT * FROM sales";
			Statement stmt = conn.createStatement();
			ResultSet rs;
			//By scanning the table to get the value of attribute needed.
			rs = stmt.executeQuery(sql);
			while(rs.next()) {
				int quant = rs.getInt("quant");
				String state = rs.getString("state");
				int month = rs.getInt("month");
				int year = rs.getInt("year");
				int day = rs.getInt("day");
				String prod = rs.getString("prod");
				String cust = rs.getString("cust");
				String key = "" + prod + cust;

				if( true ){
					if(!mapMFStruct.containsKey(key)){
						MFStruct mfstruct = new MFStruct(prod, cust);
						mfstruct.set_count_0_quant(quant);
						mfstruct.set_sum_0_quant(quant);
						mapMFStruct.put(key, mfstruct);
					}else{
						MFStruct mfstruct = mapMFStruct.get(key);
						mfstruct.set_count_0_quant(quant);
						mfstruct.set_sum_0_quant(quant);
						mapMFStruct.put(key, mfstruct);
					}
				}
			}
			rs = stmt.executeQuery(sql);
			while(rs.next()) {
				int quant = rs.getInt("quant");
				String state = rs.getString("state");
				int month = rs.getInt("month");
				int year = rs.getInt("year");
				int day = rs.getInt("day");
				String prod = rs.getString("prod");
				String cust = rs.getString("cust");
				String key = "" + prod + cust;

				if( state.compareTo("NJ")>0 ){
					if(!mapMFStruct.containsKey(key)){
						MFStruct mfstruct = new MFStruct(prod, cust);
						mfstruct.set_min_1_state(state);
						mfstruct.set_max_1_state(state);
						mfstruct.set_sum_1_quant(quant);
						mapMFStruct.put(key, mfstruct);
					}else{
						MFStruct mfstruct = mapMFStruct.get(key);
						mfstruct.set_min_1_state(state);
						mfstruct.set_max_1_state(state);
						mfstruct.set_sum_1_quant(quant);
						mapMFStruct.put(key, mfstruct);
					}
				}
			}
			rs = stmt.executeQuery(sql);
			while(rs.next()) {
				int quant = rs.getInt("quant");
				String state = rs.getString("state");
				int month = rs.getInt("month");
				int year = rs.getInt("year");
				int day = rs.getInt("day");
				String prod = rs.getString("prod");
				String cust = rs.getString("cust");
				String key = "" + prod + cust;
				int avg_0_quant = 0;
				String max_1_state = "";

				if(mapMFStruct.containsKey(key)){
					int aggrFunValue0= mapMFStruct.get(key).get_avg_0_quant();
					if(aggrFunValue0== Integer.MAX_VALUE|| aggrFunValue0 == Integer.MIN_VALUE){
						continue;
					}else{
						avg_0_quant = aggrFunValue0;
					}
					String aggrFunValue1= mapMFStruct.get(key).get_max_1_state();
					if(aggrFunValue1.equals("")){
						continue;
					}else{
						max_1_state = aggrFunValue1;
					}
				}

				if( quant>avg_0_quant&&state.compareTo(max_1_state)<0 ){
					if(!mapMFStruct.containsKey(key)){
						MFStruct mfstruct = new MFStruct(prod, cust);
						mfstruct.set_count_2_quant(quant);
						mfstruct.set_sum_2_quant(quant);
						mapMFStruct.put(key, mfstruct);
					}else{
						MFStruct mfstruct = mapMFStruct.get(key);
						mfstruct.set_count_2_quant(quant);
						mfstruct.set_sum_2_quant(quant);
						mapMFStruct.put(key, mfstruct);
					}
				}
			}
			rs = stmt.executeQuery(sql);
			while(rs.next()) {
				int quant = rs.getInt("quant");
				String state = rs.getString("state");
				int month = rs.getInt("month");
				int year = rs.getInt("year");
				int day = rs.getInt("day");
				String prod = rs.getString("prod");
				String cust = rs.getString("cust");
				String key = "" + prod + cust;
				int avg_2_quant = 0;

				if(mapMFStruct.containsKey(key)){
					int aggrFunValue0= mapMFStruct.get(key).get_avg_2_quant();
					if(aggrFunValue0== Integer.MAX_VALUE|| aggrFunValue0 == Integer.MIN_VALUE){
						continue;
					}else{
						avg_2_quant = aggrFunValue0;
					}
				}

				if( quant>avg_2_quant ){
					if(!mapMFStruct.containsKey(key)){
						MFStruct mfstruct = new MFStruct(prod, cust);
						mfstruct.set_count_3_state(state);
						mapMFStruct.put(key, mfstruct);
					}else{
						MFStruct mfstruct = mapMFStruct.get(key);
						mfstruct.set_count_3_state(state);
						mapMFStruct.put(key, mfstruct);
					}
				}
			}
			//Print out result of user's query.
				System.out.printf("|%14s|%14s|%28s|%14s|%14s|%14s|%14s|\n", "cust", "prod", "avg_0_quant+sum_1_quant", "max_1_state", "min_1_state", "avg_2_quant", "count_3_state" );
			Iterator<Entry<String, MFStruct>> iter = mapMFStruct.entrySet().iterator();
			while(iter.hasNext()){
				Map.Entry entry = (Map.Entry) iter.next();
				MFStruct val = (MFStruct)entry.getValue();
				int avg_0_quant = val.get_avg_0_quant();
				int sum_1_quant = val.get_sum_1_quant();
				String max_1_state = val.get_max_1_state();
				String min_1_state = val.get_min_1_state();
				int avg_2_quant = val.get_avg_2_quant();
				int count_3_state = val.get_count_3_state();
				//Print out result of user's query.
				System.out.printf("|%-14s|%-14s|%28s|%-14s|%-14s|%14s|%14s|\n", 
				val.get_cust(),
				val.get_prod(),
				avg_0_quant == Integer.MAX_VALUE||avg_0_quant == Integer.MIN_VALUE||sum_1_quant == Integer.MAX_VALUE||sum_1_quant == Integer.MIN_VALUE?"":avg_0_quant+sum_1_quant,
				val.get_max_1_state(),
				val.get_min_1_state(),
				avg_2_quant == Integer.MAX_VALUE||avg_2_quant == Integer.MIN_VALUE?"":avg_2_quant,
				count_3_state == Integer.MAX_VALUE||count_3_state == Integer.MIN_VALUE?"":count_3_state );
			}
		}
		catch (SQLException e) {
			e.printStackTrace();
		}catch(ClassNotFoundException e) {
			e.printStackTrace();
		}
	}
}
